app:
  baseUrl: http://localhost:7007

backend:
  baseUrl: http://localhost:7007
  listen: ':7007'

  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}

# auth:
#   providers:
#     guest:
#       dangerouslyAllowOutsideDevelopment: true
auth:
  # environment: production
  providers:
    github:
      development:
        clientId: "#AUTH_GITHUB_CLIENT_ID#"
        clientSecret: "#AUTH_GITHUB_CLIENT_SECRET#"
        ## uncomment if using GitHub Enterprise
        # enterpriseInstanceUrl: ${AUTH_GITHUB_ENTERPRISE_INSTANCE_URL}
        signIn:
          resolvers:
            # Matches the GitHub username with the Backstage user entity name.
            # See https://backstage.io/docs/auth/github/provider#resolvers for more resolvers.
            - resolver: usernameMatchingUserEntityName
    guest:
      dangerouslyAllowOutsideDevelopment: true

catalog:
  rules:
    - allow: [Component, System, API, Resource, Location, Template]
  locations:
    - type: url
      target: https://github.com/${GITHUB_ORG_ID}/backstage/blob/main/catalog-info.yaml
    # - type: url
    #   target: https://github.com/${GITHUB_ORG_ID}/backstage/blob/main/templates/node-service/template.yaml
    #   rules:
    #     - allow: [Template]
    # - type: url
    #   target: https://github.com/${GITHUB_ORG_ID}/backstage/blob/main/templates/podinfo-example/template.yaml
    #   rules:
    #     - allow: [Template]
    - type: url
      target: https://github.com/${GITHUB_ORG_ID}/backstage/blob/main/examples/python-fastapi-service-gcr-cloudsql/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/${GITHUB_ORG_ID}/backstage/blob/main/examples/nextjs-website-azureappservice/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/${GITHUB_ORG_ID}/backstage/blob/main/examples/org.yaml
      rules:
        - allow: [User, Group]
